I"<h1 id="c-why-does-nobody-have-abc-code-metric-in-c">C#: Why does nobody have ABC code metric in C#</h1>

<p>Anyone who knows me will know I don’t think much of code metrics. I don’t like anything that gives people an excuse to go into autopilot with decision wise.</p>

<p>I have seen terrible code that scores well in all metrics thrown at it - moreover I am not convinced a lot of devs understand how to use metrics to get good code. The game becomes ‘lower the metric - save the cheerleader’</p>

<h2 id="so-imagine-my-suprise-when-99-bottles-of-oop-opens-with-them">So imagine my suprise when ‘99 Bottles of OOP’ opens with them</h2>

<p>I love working on my coding chops and challenging my assumptions. I also like to think I might be pretty good at some of this stuff. Problem is I am not sure what.</p>

<p>Sandi Metz + Katrina Owen wrote a book and I think it’s looking to be very very good.</p>

<p>In a discussion of what good code might look like they have made recourse to code metrics because they at least provide an abstract yet objective point against which a discussion of code can take place - I like that.</p>

<h2 id="their-favoured-metric-for-measuring-cognitive-load-is-abc">Their favoured metric (for measuring cognitive load) is ABC</h2>

<p>ABC measures Assignments, Branches and Conditionals.</p>

<p>It actually looks pretty good and ends up with scores that make seem to marry up against complexity.</p>

<h2 id="nobody-in-the-dot-net-world-does-it">Nobody in the dot net world does it!!!</h2>

<p>Seriously, it seems almost every other langauge has it on the first page of google.</p>

<p>Not C# … why I wonder?</p>

:ET