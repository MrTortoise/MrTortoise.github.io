I"ê+<h1 id="following-on-from-part-12">Following on from part 1+2</h1>

<p>Before we caught keyboard input, then we found which key was being pressed.</p>

<p>So lets turn that into some kind of manipulation of a vector.
The goal is to increment and decrement x,y values and display them in the view on update.</p>

<h2 id="changes-to-model">Changes to Model</h2>

<div class="language-elm highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">type</span> <span class="k">alias</span> <span class="kt">Model</span> <span class="o">=</span>
    <span class="p">{</span> <span class="n">pressedKeys</span> <span class="p">:</span> <span class="kt">Set</span> <span class="kt">KeyCode</span>
    <span class="o">,</span> <span class="n">x</span> <span class="p">:</span> <span class="kt">Int</span>
    <span class="o">,</span> <span class="n">y</span> <span class="p">:</span> <span class="kt">Int</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="changes-to-view">Changes to View</h2>

<div class="language-elm highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">view</span> <span class="p">:</span> <span class="kt">Model</span> <span class="o">-&gt;</span> <span class="kt">Html</span> <span class="kt">Msg</span>
<span class="n">view</span> <span class="n">model</span> <span class="o">=</span>
  <span class="k">let</span>
      <span class="n">keyString</span> <span class="o">=</span>
        <span class="kt">Set</span><span class="o">.</span><span class="n">map</span> <span class="n">toString</span> <span class="n">model</span><span class="o">.</span><span class="n">pressedKeys</span>
        <span class="o">|&gt;</span> <span class="kt">Set</span><span class="o">.</span><span class="n">foldr</span> <span class="kt">String</span><span class="o">.</span><span class="n">append</span> <span class="s">"</span><span class="s2">"</span>
  <span class="k">in</span>
      <span class="n">div</span> <span class="p">[]</span>
          <span class="p">[</span>
            <span class="n">text</span> <span class="n">keyString</span><span class="o">,</span> <span class="n">text</span> <span class="p">(</span><span class="n">toString</span> <span class="n">model</span><span class="o">.</span><span class="n">x</span><span class="p">)</span><span class="o">,</span> <span class="n">text</span> <span class="p">(</span><span class="n">toString</span> <span class="n">model</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>
          <span class="p">]</span>
</code></pre></div></div>

<h2 id="changes-to-update">Changes to update</h2>

<p>This is the fun part. I am not sure i have done this in a very efficient way. But was fun to write.</p>

<div class="language-elm highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">handleKeyChange</span> <span class="p">:</span> <span class="kt">Bool</span> <span class="o">-&gt;</span> <span class="kt">KeyCode</span> <span class="o">-&gt;</span> <span class="kt">Model</span> <span class="o">-&gt;</span> <span class="kt">Model</span>
<span class="n">handleKeyChange</span> <span class="n">pressed</span> <span class="n">keyCode</span> <span class="n">model</span> <span class="o">=</span>
  <span class="k">let</span>
    <span class="n">fn</span> <span class="o">=</span> <span class="k">if</span> <span class="n">pressed</span> <span class="k">then</span> <span class="kt">Set</span><span class="o">.</span><span class="n">insert</span> <span class="k">else</span> <span class="kt">Set</span><span class="o">.</span><span class="n">remove</span>
    <span class="n">pressedKeys</span> <span class="o">=</span> <span class="n">fn</span> <span class="n">keyCode</span> <span class="n">model</span><span class="o">.</span><span class="n">pressedKeys</span>
    <span class="p">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="p">)</span> <span class="o">=</span> <span class="n">parseDirection</span> <span class="n">pressedKeys</span> <span class="n">model</span>
  <span class="k">in</span>
    <span class="p">{</span> <span class="n">model</span> <span class="o">|</span> <span class="n">pressedKeys</span> <span class="o">=</span> <span class="n">pressedKeys</span><span class="o">,</span> <span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">y</span> <span class="p">}</span>

<span class="n">parseDirection</span> <span class="p">:</span> <span class="kt">Set</span> <span class="kt">KeyCode</span> <span class="o">-&gt;</span> <span class="kt">Model</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span>
<span class="n">parseDirection</span> <span class="n">keyCodes</span> <span class="n">model</span> <span class="o">=</span>
  <span class="k">let</span>
    <span class="n">left</span> <span class="o">=</span> <span class="kt">Set</span><span class="o">.</span><span class="n">member</span> <span class="mi">37</span> <span class="n">model</span><span class="o">.</span><span class="n">pressedKeys</span>
    <span class="n">up</span> <span class="o">=</span> <span class="kt">Set</span><span class="o">.</span><span class="n">member</span>  <span class="mi">38</span> <span class="n">model</span><span class="o">.</span><span class="n">pressedKeys</span>
    <span class="n">right</span> <span class="o">=</span> <span class="kt">Set</span><span class="o">.</span><span class="n">member</span> <span class="mi">39</span> <span class="n">model</span><span class="o">.</span><span class="n">pressedKeys</span>
    <span class="n">down</span> <span class="o">=</span> <span class="kt">Set</span><span class="o">.</span><span class="n">member</span> <span class="mi">40</span> <span class="n">model</span><span class="o">.</span><span class="n">pressedKeys</span>
  <span class="k">in</span>
    <span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">x</span><span class="o">,</span> <span class="n">model</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>
    <span class="o">|&gt;</span> <span class="n">handleUp</span>  <span class="n">up</span>
    <span class="o">|&gt;</span> <span class="n">handleDown</span> <span class="n">down</span>
    <span class="o">|&gt;</span> <span class="n">handleLeft</span> <span class="n">left</span>
    <span class="o">|&gt;</span> <span class="n">handleRight</span> <span class="n">right</span>


<span class="n">handleUp</span><span class="p">:</span><span class="kt">Bool</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span>  <span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span>
<span class="n">handleUp</span>  <span class="n">apply</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span><span class="o">=</span>
  <span class="k">case</span> <span class="n">apply</span> <span class="k">of</span>
    <span class="kt">True</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="kt">False</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>

<span class="n">handleDown</span><span class="p">:</span> <span class="kt">Bool</span> <span class="o">-&gt;</span>  <span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span>
<span class="n">handleDown</span> <span class="n">apply</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>  <span class="o">=</span>
  <span class="k">case</span> <span class="n">apply</span> <span class="k">of</span>
    <span class="kt">True</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="kt">False</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>

<span class="n">handleLeft</span><span class="p">:</span>  <span class="kt">Bool</span> <span class="o">-&gt;</span><span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span>
<span class="n">handleLeft</span> <span class="n">apply</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>  <span class="o">=</span>
  <span class="k">case</span> <span class="n">apply</span> <span class="k">of</span>
    <span class="kt">True</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>
    <span class="kt">False</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>

<span class="n">handleRight</span><span class="p">:</span> <span class="kt">Bool</span> <span class="o">-&gt;</span><span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span>  <span class="p">(</span><span class="kt">Int</span><span class="o">,</span> <span class="kt">Int</span><span class="p">)</span>
<span class="n">handleRight</span> <span class="n">apply</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>  <span class="o">=</span>
  <span class="k">case</span> <span class="n">apply</span> <span class="k">of</span>
    <span class="kt">True</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>
    <span class="kt">False</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="p">)</span>
</code></pre></div></div>
:ET